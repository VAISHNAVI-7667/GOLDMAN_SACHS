class Solution {
    public int findPairs(int[] nums, int k) {
    Arrays.sort(nums);
    Set<Integer> set = new HashSet();
    for(int i=0;i<nums.length-1;i++)
    {
        if(Arrays.binarySearch(nums,i+1,nums.length,nums[i]+k)>0)
        {
            set.add(Math.min(nums[i],nums[i]+k));
        }
    }  
    return set.size();
    }
}


//Second approach
class Solution {
    public int findPairs(int[] nums, int k) {
    Map<Integer,Integer> map = new HashMap();

    for(int x:nums)
    {
         map.put(x,map.getOrDefault(x,0)+1);   
    }

    int count =0;

    for(int x:map.keySet())
    {
        if(k>0 && map.containsKey(x+k) || k==0 && map.get(x)>1)
        count++;
    }

    return count;
    }
}
