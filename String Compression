class Solution:
    def compress(self, chars: List[str]) -> int:
        i=j=0
        while i<len(chars):
            count = 1
            while i<len(chars)-1 and chars[i]==chars[i+1]:
                count+=1
                i+=1
            chars[j] = chars[i]
            j+=1

            if count > 1:
                for val in str(count):
                    chars[j] = val
                    j+=1
            i+=1
        return j

// In java
class Solution {
    public int compress(char[] chars) {
        int indexAns = 0, index = 0;
        while(index < chars.length){
            char currentChar = chars[index];
            int count = 0;
            while(index < chars.length && chars[index] == currentChar){
                index++;
                count++;
            }
            chars[indexAns++] = currentChar;
            if(count != 1)
                for(char c : Integer.toString(count).toCharArray()) 
                    chars[indexAns++] = c;
        }
        return indexAns;
    }
}
